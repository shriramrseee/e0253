From d3c8a4e6d32846ef4682cec57a283f7f1b945240 Mon Sep 17 00:00:00 2001
From: Shriram Ramesh <shriramrseee@gmail.com>
Date: Fri, 24 Jan 2020 11:06:03 +0530
Subject: [PATCH 1/1] Add a NOOP system call named my_precious

Signed-off-by: Shriram Ramesh <shriramrseee@gmail.com>
---
 arch/x86/entry/syscalls/syscall_32.tbl | 1 +
 arch/x86/entry/syscalls/syscall_64.tbl | 1 +
 include/linux/syscalls.h               | 2 ++
 include/uapi/asm-generic/unistd.h      | 7 ++++++-
 kernel/sys.c                           | 7 +++++++
 kernel/sys_ni.c                        | 4 ++++
 6 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/arch/x86/entry/syscalls/syscall_32.tbl b/arch/x86/entry/syscalls/syscall_32.tbl
index 3cf7b533b..9c95b36d7 100644
--- a/arch/x86/entry/syscalls/syscall_32.tbl
+++ b/arch/x86/entry/syscalls/syscall_32.tbl
@@ -398,3 +398,4 @@
 384	i386	arch_prctl		sys_arch_prctl			__ia32_compat_sys_arch_prctl
 385	i386	io_pgetevents		sys_io_pgetevents		__ia32_compat_sys_io_pgetevents
 386	i386	rseq			sys_rseq			__ia32_sys_rseq
+387	i386	my_precious			sys_my_precious			__ia32_sys_my_precious
diff --git a/arch/x86/entry/syscalls/syscall_64.tbl b/arch/x86/entry/syscalls/syscall_64.tbl
index f0b1709a5..87c156cbc 100644
--- a/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/arch/x86/entry/syscalls/syscall_64.tbl
@@ -343,6 +343,7 @@
 332	common	statx			__x64_sys_statx
 333	common	io_pgetevents		__x64_sys_io_pgetevents
 334	common	rseq			__x64_sys_rseq
+335	common	my_precious			__x64_sys_my_precious
 
 #
 # x32-specific system call numbers start at 512 to avoid cache impact
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index 257cccba3..bfef9bf01 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -689,6 +689,8 @@ asmlinkage long sys_umask(int mask);
 asmlinkage long sys_prctl(int option, unsigned long arg2, unsigned long arg3,
 			unsigned long arg4, unsigned long arg5);
 asmlinkage long sys_getcpu(unsigned __user *cpu, unsigned __user *node, struct getcpu_cache __user *cache);
+/*A NOOP system call for E0-253 A0*/
+asmlinkage long sys_my_precious(void);
 
 /* kernel/time.c */
 asmlinkage long sys_gettimeofday(struct timeval __user *tv,
diff --git a/include/uapi/asm-generic/unistd.h b/include/uapi/asm-generic/unistd.h
index d90127298..5b628774f 100644
--- a/include/uapi/asm-generic/unistd.h
+++ b/include/uapi/asm-generic/unistd.h
@@ -741,8 +741,13 @@ __SYSCALL(__NR_rseq, sys_rseq)
 #define __NR_kexec_file_load 294
 __SYSCALL(__NR_kexec_file_load,     sys_kexec_file_load)
 
+/* kernel/sys.c */
+/*A NOOP system call for E0-253 A0*/
+#define __NR_my_precious 295
+__SYSCALL(__NR_my_precious,     sys_my_precious)
+
 #undef __NR_syscalls
-#define __NR_syscalls 295
+#define __NR_syscalls 296
 
 /*
  * 32 bit systems traditionally used different
diff --git a/kernel/sys.c b/kernel/sys.c
index f7eb62ece..848e41d67 100644
--- a/kernel/sys.c
+++ b/kernel/sys.c
@@ -2648,3 +2648,10 @@ COMPAT_SYSCALL_DEFINE1(sysinfo, struct compat_sysinfo __user *, info)
 	return 0;
 }
 #endif /* CONFIG_COMPAT */
+
+
+/*A NOOP system call for E0-253 A0*/
+SYSCALL_DEFINE0(my_precious)
+{
+	return 0;
+}
diff --git a/kernel/sys_ni.c b/kernel/sys_ni.c
index ab9d0e3c6..27d5a4bb9 100644
--- a/kernel/sys_ni.c
+++ b/kernel/sys_ni.c
@@ -437,3 +437,7 @@ COND_SYSCALL(setuid16);
 
 /* restartable sequence */
 COND_SYSCALL(rseq);
+
+/* kernel/sys.c */
+/*A NOOP system call for E0-253 A0*/
+COND_SYSCALL(my_precious);
-- 
2.17.1

